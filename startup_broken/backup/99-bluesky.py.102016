def detselect(detector_object, suffix="_stats1_total"):
    """Switch the active detector and set some internal state"""
    gs.DETS =[detector_object]
    gs.PLOT_Y = detector_object.name + suffix
    gs.TABLE_COLS = [gs.PLOT_Y] 



##### I/O devices 
from epics import (caget, caput)

## Fluorescence screen 1 (FOE)
def io_fs1(inout,q=0):
    pv_r = 'XF:11BMA-BI{FS:1}Pos-Sts'
    pv_in = 'XF:11BMA-BI{FS:1}Cmd:In-Cmd'
    pv_out = 'XF:11BMA-BI{FS:1}Cmd:Out-Cmd'
    ss1 = 'Fluorescence screen 1 (FOE)'
    if inout == 1:
        caput(pv_in,1)
        ss2 = 'has been inserted'
    elif inout == 0:
        caput(pv_out,1)
        ss2 = 'has been retracted'
    else:
        if caget(pv_r)==1:
            ss2 = 'is IN'
        else:
            ss2 = 'is OUT'
    if q==0:
        print(ss1+' '+ss2) 

## Fluorescence screen 3 (Endstation)
def io_fs3(inout,q=0):
    pv_r = 'XF:11BMB-BI{FS:3}Pos-Sts'
    pv_in = 'XF:11BMB-BI{FS:3}Cmd:In-Cmd'
    pv_out = 'XF:11BMB-BI{FS:3}Cmd:Out-Cmd'
    ss1 = 'Fluorescence screen 3 (Endstation)'
    if inout == 1:
        caput(pv_in,1)
        ss2 = 'has been inserted'
    elif inout == 0:
        caput(pv_out,1)
        ss2 = 'has been retracted'
    else:
        if caget(pv_r)==1:
            ss2 = 'is IN'
        else:
            ss2 = 'is OUT'
    if q==0:
        print(ss1+' '+ss2) 

## Fluorescence screen 4 (Endstation)
def io_fs4(inout,q=0):
    pv_r = 'XF:11BMB-BI{FS:4}Pos-Sts'
    pv_in = 'XF:11BMB-BI{FS:4}Cmd:In-Cmd'
    pv_out = 'XF:11BMB-BI{FS:4}Cmd:Out-Cmd'
    ss1 = 'Fluorescence screen 3 (Endstation)'
    if inout == 1:
        caput(pv_in,1)
        ss2 = 'has been inserted'
    elif inout == 0:
        caput(pv_out,1)
        ss2 = 'has been retracted'
    else:
        if caget(pv_r)==1:
            ss2 = 'is IN'
        else:
            ss2 = 'is OUT'
    if q==0:
        print(ss1+' '+ss2) 

## BIM 5 - RIGI (Endstation)
def io_bim5(inout,q=0):
    pv_r = 'XF:11BMB-BI{IM:5}Pos-Sts'
    pv_in = 'XF:11BMB-BI{IM:5}Cmd:In-Cmd'
    pv_out = 'XF:11BMB-BI{IM:5}Cmd:Out-Cmd'
    ss1 = 'BIM 5 - RIGI (Endstation)'
    if inout == 1:
        caput(pv_in,1)
        ss2 = 'has been inserted'
    elif inout == 0:
        caput(pv_out,1)
        ss2 = 'has been retracted'
    else:
        if caget(pv_r)==1:
            ss2 = 'is IN'
        else:
            ss2 = 'is OUT'
    if q==0:
        print(ss1+' '+ss2) 

## Attenuation filter box
def io_atten(pos,inout,q=0):
    if pos >= 1 and pos <= 8:
        pv_r = 'XF:11BMB-OP{Fltr:' + str(int(pos)) + '}Pos-Sts'        
        pv_in = 'XF:11BMB-OP{Fltr:' + str(int(pos)) + '}Cmd:In-Cmd'        
        pv_out = 'XF:11BMB-OP{Fltr:' + str(int(pos)) + '}Cmd:Out-Cmd'        
        ss1 = 'Atten filter ' + str(int(pos))
        if inout == 1:
            caput(pv_in,1)
            ss2 = 'has been inserted'
        elif inout == 0:
            caput(pv_out,1)
            ss2 = 'has been retracted'
        else:
            if caget(pv_r)==1:
                ss2 = 'is IN'
            else:
                ss2 = 'is OUT'
        if q==0:
            print(ss1+' '+ss2) 
    else:
        print('Attenuator position must be an integer between 1 and 8')


##### Endstation pumps
## Pump for flightpaths
def pump_fp(onoff, q=0):
    pv_r = 'XF:11BMB-VA{BT:SAXS-Pmp:1}Sts:Enbl-Sts'
    pv_w = 'XF:11BMB-VA{BT:SAXS-Pmp:1}Cmd:Enbl-Cmd'
    if onoff == 1:
        caput(pv_w,0)
        sleep(0.2)
        caput(pv_w,1)	
        ss='Flightpath pump has been turned ON'
    elif onoff == 0:
        caput(pv_w,0)	
        ss='Flightpath pump has been turned OFF'
    else:
        if caget(pv_r)==1:
            ss='Flightpath pump is ON'
        else:
            ss='Flightpath pump is OFF'
    if q==0:
        print(ss)

## Pump for sample/WAXS chamber
def pump_chm(onoff, q=0):
    pv_r = 'XF:11BMB-VA{Chm:Det-Pmp:1}Sts:Enbl-Sts'
    pv_w = 'XF:11BMB-VA{Chm:Det-Pmp:1}Cmd:Enbl-Cmd'
    if onoff == 1:
        caput(pv_w,0)
        sleep(0.2)
        caput(pv_w,1)	
        ss='Chamber pump has been turned ON'
    elif onoff == 0:
        caput(pv_w,0)	
        ss='Chamber pump has been turned OFF'
    else:
        if caget(pv_r)==1:
            ss='Chamber pump is ON'
        else:
            ss='Chamber pump is OFF'
    if q==0:
        print(ss)





